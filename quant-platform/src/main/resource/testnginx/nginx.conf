#该版本的nginx.conf是实现了websocket的代理功能的基础之上添加了lua
#设置worker进程的所有者  解决：ngnix启动时的work进程的所属组
user nginx nginx;  

#设置  worker进程的个数 ；一般设置cpu核心数一致
worker_processes  1;
 
#设置nginx的日志位置与级别
error_log /usr/local/logs/nginx/nginx_error.log;      
error_log /usr/local/logs/nginx/notice.log notice;
error_log /usr/local/logs/nginx/info.log info;

#PID文件，记录当前启动的nginx的进程ID
pid      /usr/local/logs/nginx/nginx.pid;

events {
    worker_connections  1024;
}


http {
    #设定mime类型(邮件支持类型),类型由mime.types文件定义
    include       mime.types;
    #设置...
    default_type  application/octet-stream;
    
    #设定日志格式
    log_format  main  '[$remote_addr] - [$remote_user] [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    
	lua_package_path "/usr/local/openresty/lualib/?.lua;;";  #lua 模块  
	lua_package_cpath "/usr/local/openresty/lualib/?.so;;";  #c模块
	
    #access_log  logs/access.log  main;

    #sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，
    #必须设为 on,如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.
    sendfile        on;
    
    #tcp_nopush     on;

    #连接超时时间
    keepalive_timeout  65;
    tcp_nopush     on;
	
	#gzip压缩开关
    #gzip  on;
 	
 	
 	#WebSocket 需要该配置
 	map $http_upgrade $connection_upgrade {
	    default upgrade;
	    '' close;
	}
	
	
    #设定实际的服务器列表 
    upstream notebook {
         server localhost:8888;
    }
    
    upstream websocket {
         server localhost:8888;
    }
    
    
    server {
        listen       80;
        server_name  192.168.14.129;
		
		#编码格式
		charset utf-8;

        #access_log  logs/host.access.log  main;
		
		#代理配置参数
        proxy_connect_timeout 180;
        proxy_send_timeout 180;
        proxy_read_timeout 180;
        
        
		#反向代理的路径（和upstream绑定），location 后面设置映射的路径
        location / {
        	set $backend  ''; 
             
            proxy_set_header Host $host;
        	proxy_set_header X-Forwarder-For $remote_addr;
        	#proxy_pass http://localhost:8888;
        	
        	access_by_lua_file  /usr/local/openresty/nginx/conf/notebookproxy.lua;
       		proxy_pass http://$backend;
        }
        
        #web socket
        location ^~ /api/kernels/ { 
       		set $backend  ''; 
		    
		    proxy_set_header X-Real-IP $remote_addr;
	        proxy_set_header Host $host;
	        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	    
		    proxy_http_version 1.1;
		    proxy_set_header Upgrade $http_upgrade;
		    proxy_set_header Connection "upgrade";
		    
		    access_by_lua_file  /usr/local/openresty/nginx/conf/notebookproxy.lua;
       		proxy_pass http://$backend;
		}
		
		
		
		#location /lua { 
	 	#	 default_type 'text/html';  
        #    content_by_lua 'ngx.say("hello world")';
        #}  
        location /lua { 
            default_type 'text/html';  
        	#resolver 8.8.8.8;
        	set $backend  ''; 
        	rewrite_by_lua_file  /usr/local/openresty/nginx/conf/ivr.lua;
        	#rewrite_by_lua_file  /usr/local/openresty/nginx/conf/notebookproxy.lua;
       		proxy_pass http://$backend;
	    }  
    }
      

}
