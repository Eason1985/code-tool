#该版本的nginx.conf是实现了websocket的代理功能
#设置worker进程的所有者  解决：ngnix启动时的work进程的所属组
user nginx nginx;  

#设置  worker进程的个数 ；一般设置cpu核心数一致
worker_processes 1;

#设置nginx的日志位置与级别
error_log /usr/local/logs/nginx/nginx_error.log;      
error_log /usr/local/logs/nginx/notice.log notice;
error_log /usr/local/logs/nginx/info.log info;

#PID文件，记录当前启动的nginx的进程ID
pid      /usr/local/logs/nginx/nginx.pid;

#工作模式及连接数上限
events {
	#单个后台worker process进程的最大并发链接数
    worker_connections  1024;  
}

#设定http服务器，利用它的反向代理功能提供负载均衡支持
http {
 	#设定mime类型(邮件支持类型),类型由mime.types文件定义
    include       mime.types;
    #设置...
    default_type  application/octet-stream;
    
    #设定日志格式
    log_format  main  '[$remote_addr] - [$remote_user] [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
                      
    #...           
    #access_log    D:/Tools/nginx-1.10.1/logs/access.log main;
    #rewrite_log     on;   
    
                 
    #sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，
    #必须设为 on,如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.
    sendfile        on;
    
 	
    #连接超时时间
    keepalive_timeout  65;
    tcp_nopush     on;
    
    #gzip压缩开关
    #gzip  on;
    
    
    map $http_upgrade $connection_upgrade {
	    default upgrade;
	    '' close;
	}
	
	
    #设定实际的服务器列表 
    upstream notebook {
         server localhost:8888;
    }
    
    upstream websocket {
         server localhost:8888;
    }
    
    #HTTP服务器
    server {
        #监听端口号，nginx监听的端口号
        listen 80;
        
        server_name  192.168.14.129;
        
        #首页
        #index index.html
        
        #编码格式
        charset utf-8;
        
        #代理配置参数
        proxy_connect_timeout 180;
        proxy_send_timeout 180;
        proxy_read_timeout 180;
        
        
        
        #反向代理的路径（和upstream绑定），location 后面设置映射的路径
        location / {
            proxy_pass http://notebook;
            proxy_set_header Host $host;
        	proxy_set_header X-Forwarder-For $remote_addr;
        }
        
        location ^~ /api/kernels/ { 
		    proxy_pass http://websocket;
		    
		    proxy_set_header X-Real-IP $remote_addr;
	        proxy_set_header Host $host;
	        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	    
		    proxy_http_version 1.1;
		    proxy_set_header Upgrade $http_upgrade;
		    proxy_set_header Connection "upgrade";
		}
        
        
        #静态文件，nginx自己处理
        #location ~ ^/(javascript|js|css|flash|media|static)/ {
        #    root D:\01_Workspace\Project\github\zp\SpringNotes\spring-security\spring-shiro\src\main\webapp\views;
        #    #过期30天，静态文件不怎么更新，过期可以设大一点，如果频繁更新，则可以设置得小一点。
        #    expires 30d;
        #}
        
        #设定查看Nginx状态的地址
        #location /NginxStatus {
        #    stub_status           on;
        #    access_log            on;
        #    auth_basic            "NginxStatus";
        #    auth_basic_user_file  conf/htpasswd;
        #}
        
        
        #禁止访问 .htxxx 文件
        #location ~ /\.ht {
        #    deny all;
        #}
        
    }
    
}
